// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Meshmesh",
            "url": "https://github.com/EspMeshMesh"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/discovery/neighbors": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discovery"
                ],
                "summary": "Get neighbors",
                "operationId": "getNeighbors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rest.MeshNeighbor"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/discovery/state": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discovery"
                ],
                "summary": "Get discovery procedure state",
                "operationId": "getDiscoveryProcedureState",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.MeshDiscoveryState"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/esphome/clients": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Esphome"
                ],
                "summary": "Get esphome clients",
                "operationId": "getEsphomeClients",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rest.EsphomeClient"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/esphome/servers": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Esphome"
                ],
                "summary": "Get esphome servers",
                "operationId": "getEsphomeServers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rest.EsphomeServer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/firmware/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Firmware"
                ],
                "summary": "Get firmware",
                "operationId": "getFirmware",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Firmware ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.MeshFirmware"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Firmware"
                ],
                "summary": "Update firmware",
                "operationId": "updateFirmware",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Firmware ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update firmware request",
                        "name": "firmware",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.UpdateFirmwareRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.MeshFirmware"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/links": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Links"
                ],
                "summary": "Get links",
                "operationId": "getLinks",
                "parameters": [
                    {
                        "description": "Get list request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.GetListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rest.MeshLink"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Links"
                ],
                "summary": "Create link",
                "operationId": "createLink",
                "parameters": [
                    {
                        "description": "Create link request",
                        "name": "link",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.MeshLink"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/links/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Links"
                ],
                "summary": "Get one link",
                "operationId": "getOneLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Link ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.MeshLink"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Links"
                ],
                "summary": "Update link",
                "operationId": "updateLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Link ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update link request",
                        "name": "link",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.UpdateLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.MeshLink"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Links"
                ],
                "summary": "Delete link",
                "operationId": "deleteLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Link ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/nodes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "summary": "Get nodes",
                "operationId": "getNodes",
                "parameters": [
                    {
                        "description": "Get list request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.GetListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rest.MeshNode"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "summary": "Create node",
                "operationId": "createNode",
                "parameters": [
                    {
                        "description": "Create node request",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.CreateNodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.MeshNode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/nodes/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "summary": "Get one node",
                "operationId": "getOneNode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.MeshNode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "summary": "Update node",
                "operationId": "updateNode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update node request",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.UpdateNodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.MeshNode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "summary": "Delete node",
                "operationId": "deleteNode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.MeshNode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rest.CreateNodeRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "in_use": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "rest.EsphomeClient": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "handle": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "received": {
                    "type": "integer"
                },
                "sent": {
                    "type": "integer"
                },
                "started": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "rest.EsphomeServer": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "clients": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "rest.GetListRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "range": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                }
            }
        },
        "rest.MeshDiscoveryState": {
            "type": "object",
            "properties": {
                "current_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "repeat": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.MeshFirmware": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "progress": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.MeshLink": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "to": {
                    "type": "integer"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "rest.MeshNeighbor": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "current": {
                    "type": "number"
                },
                "delta": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "next": {
                    "type": "number"
                }
            }
        },
        "rest.MeshNode": {
            "type": "object",
            "properties": {
                "binded": {
                    "type": "integer"
                },
                "channel": {
                    "type": "integer"
                },
                "dev_tag": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "flags": {
                    "type": "integer"
                },
                "groups": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "in_use": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "revision": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "tx_power": {
                    "type": "integer"
                }
            }
        },
        "rest.UpdateFirmwareRequest": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "rest.UpdateLinkRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "rest.UpdateNodeRequest": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "integer"
                },
                "dev_tag": {
                    "type": "string"
                },
                "in_use": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "string"
                },
                "tx_power": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Meshmesh API",
	Description:      "Meshmesh API documents https://github.com/EspMeshMesh/meshmeshgo",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
